# Galera cache encryption
# Restart test #3: start both nodes encryption enabled
# and restart node_2 with different key file and finally
# restart node_2 with original key file.

--source include/galera_cluster.inc
--source include/have_innodb.inc

call mtr.add_suppression("WSREP: GCache recovery is not supported when encryption is enabled. Recovery will be skipped.");

# Save original auto_increment_offset values.
--let $node_1=node_1
--let $node_2=node_2
--source include/auto_increment_offset_save.inc

--connection node_1
--echo # node_1

CREATE TABLE encryption(a INT primary key, b text) engine=innodb;
INSERT into encryption values (1, 'VerySecretMessage');

--let SEARCH_PATTERN= CREATE TABLE encryption\(a INT\)

# galera.page.xxxxxx should contain encrypted writesets
--let $MYSQLD_DATADIR_1= `select @@datadir`
--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= VerySecretMessage
--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.cache
--source include/search_pattern_in_file.inc

--connection node_2

--echo # node_2
call mtr.add_suppression("WSREP: GCache recovery is not supported when encryption is enabled. Recovery will be skipped.");
show variables like 'encrypt_binlog';

--let SEARCH_PATTERN= CREATE TABLE encryption\(a INT\)

--let $MYSQLD_DATADIR_2= `select @@datadir`
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= VerySecretMessage
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--echo # Restart node 2 and change the key file

--connection node_2
--source include/shutdown_mysqld.inc

--perl
       use strict;
       rename "$ENV{MYSQLTEST_VARDIR}/my.cnf","$ENV{MYSQLTEST_VARDIR}/my.cnf.bak";
       open(IN, "<", "$ENV{MYSQLTEST_VARDIR}/my.cnf.bak");
       open(OUT, ">","$ENV{MYSQLTEST_VARDIR}/my.cnf");
       while(<IN>)
       {
          s/galera_encryption.key/galera_encryption_2.key/g;
          print OUT $_;
       }
       close(IN);
       close(OUT);
EOF

--source include/start_mysqld.inc

--echo # node_2
call mtr.add_suppression("WSREP: GCache recovery is not supported when encryption is enabled. Recovery will be skipped.");

show variables like 'encrypt_binlog';

INSERT INTO encryption values (2, 'YetAnymoreSecret');

--let SEARCH_PATTERN= CREATE TABLE encryption\(a INT\)

--let $MYSQLD_DATADIR_2= `select @@datadir`
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= VerySecretMessage
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= YetAnymoreSecret
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--connection node_1

--echo # node_1

--let SEARCH_PATTERN= CREATE TABLE encryption\(a INT\)

# galera.page.xxxxxx should contain encrypted writesets
--let $MYSQLD_DATADIR_1= `select @@datadir`
--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= VerySecretMessage
--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= YetAnymoreSecret
--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_1/galera.cache
--source include/search_pattern_in_file.inc

--echo # Restart node 2 and change key file back

--connection node_2
--source include/shutdown_mysqld.inc

--perl
       use strict;
       rename "$ENV{MYSQLTEST_VARDIR}/my.cnf","$ENV{MYSQLTEST_VARDIR}/my.cnf.bak";
       open(IN, "<", "$ENV{MYSQLTEST_VARDIR}/my.cnf.bak");
       open(OUT, ">","$ENV{MYSQLTEST_VARDIR}/my.cnf");
       while(<IN>)
       {
          s/galera_encryption_2.key/galera_encryption.key/g;
          print OUT $_;
       }
       close(IN);
       close(OUT);
EOF

--source include/start_mysqld.inc
call mtr.add_suppression("WSREP: GCache recovery is not supported when encryption is enabled. Recovery will be skipped.");

--echo # node_2

show variables like 'encrypt_binlog';

INSERT INTO encryption values (3, 'AgainMoreSecret');

--let SEARCH_PATTERN= CREATE TABLE encryption\(a INT\)

--let $MYSQLD_DATADIR_2= `select @@datadir`
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= VerySecretMessage
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= YetAnymoreSecret
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

--let SEARCH_PATTERN= AgainMoreSecret
--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.page.00000*
--source include/search_pattern_in_file.inc

--let SEARCH_FILE= $MYSQLD_DATADIR_2/galera.cache
--source include/search_pattern_in_file.inc

# Restore original auto_increment_offset values.
--source include/auto_increment_offset_restore.inc

--connection node_1
DROP TABLE encryption;
