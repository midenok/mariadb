connection node_1;
CREATE PROCEDURE p_I (count int, tab varchar(40))
BEGIN
DECLARE i int;
SET i = 0;
SET @stmt1 = CONCAT('INSERT INTO ', tab, '(f2) SELECT 7 FROM ten AS a1, ten AS a2, ten AS a3');
SET @stmt2 = CONCAT('INSERT INTO ', tab, '(f2) SELECT 8 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4');
SET @stmt3 = CONCAT('INSERT INTO ', tab, '(f2) SELECT 9 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4, ten AS a5');
PREPARE ps1 FROM @stmt1;
PREPARE ps2 FROM @stmt2;
PREPARE ps3 FROM @stmt3;
WHILE i < count DO
EXECUTE ps2;
SET i = i + 1;
END WHILE;
DEALLOCATE PREPARE ps1;
DEALLOCATE PREPARE ps2;
DEALLOCATE PREPARE ps3;
END|
CREATE TABLE ten (f1 INTEGER) ENGINE=InnoDB;
INSERT INTO ten VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);
CREATE TABLE ta (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE tb (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE tc (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE td (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE te (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE tf (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE tg (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE th (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE ti (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE tj (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE tk (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
CREATE TABLE tl (f1 int primary key auto_increment, f2 int) ENGINE=InnoDB;
connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1a;
SET wsrep_sync_wait=0;
connect node_1b, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1b;
SET wsrep_sync_wait=0;
connect node_1c, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1c;
SET wsrep_sync_wait=0;
connect node_1d, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1d;
SET wsrep_sync_wait=0;
connect node_1e, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1e;
SET wsrep_sync_wait=0;
connect node_1f, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1f;
SET wsrep_sync_wait=0;
connect node_1g, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1g;
SET wsrep_sync_wait=0;
connect node_1h, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1h;
SET wsrep_sync_wait=0;
connect node_1i, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1i;
SET wsrep_sync_wait=0;
connect node_1j, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1j;
SET wsrep_sync_wait=0;
connect node_1k, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1k;
SET wsrep_sync_wait=0;
connect node_1l, 127.0.0.1, root, , test, $NODE_MYPORT_1;
connection node_1l;
SET wsrep_sync_wait=0;
connection node_2;
Killing server ...
connection node_1a;
CALL p_I(10000, 'ta');;
connection node_1b;
CALL p_I(10000, 'tb');;
connection node_1c;
CALL p_I(10000, 'tc');;
connection node_1d;
CALL p_I(10000, 'td');;
connection node_1e;
CALL p_I(10000, 'te');;
connection node_1f;
CALL p_I(10000, 'tf');;
connection node_1g;
CALL p_I(10000, 'tg');;
connection node_1h;
CALL p_I(10000, 'th');;
connection node_1i;
CALL p_I(10000, 'ti');;
connection node_1j;
CALL p_I(10000, 'tj');;
connection node_1k;
CALL p_I(10000, 'tk');;
connection node_1l;
CALL p_I(10000, 'tl');;
connection node_2;
connection node_1;
KILL CONNECTION 20;
KILL CONNECTION 21;
KILL CONNECTION 22;
KILL CONNECTION 23;
KILL CONNECTION 24;
KILL CONNECTION 25;
KILL CONNECTION 26;
KILL CONNECTION 27;
KILL CONNECTION 28;
KILL CONNECTION 29;
KILL CONNECTION 30;
KILL CONNECTION 31;
connection node_1a;
connection node_1b;
connection node_1c;
connection node_1d;
connection node_1e;
connection node_1f;
connection node_1g;
connection node_1h;
connection node_1i;
connection node_1j;
connection node_1k;
connection node_1l;
connection node_2;
CALL mtr.add_suppression("WSREP: Failed to report last committed .*");
connection node_1;
CALL mtr.add_suppression("WSREP: Failed to report last committed .*");
DROP PROCEDURE p_I;
DROP TABLE ta,tb,tc,td,te,tf,tg,th,ti,tj,tk,tl;
DROP TABLE ten;
