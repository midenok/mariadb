--source suite/versioning/engines.inc
--source include/have_partition.inc
--source include/master-slave.inc

--echo # Case 2: not versioned -> versioned replication
create or replace table t1 (pk int primary key, x int);
--sync_slave_with_master
alter table t1 add system versioning;
flush logs;
--connection master
insert into t1 values (1, 1);
--sync_slave_with_master
select *, row_start, row_end from t1 for system_time all;
create or replace table t1 (pk int primary key, x int) with system versioning;
--echo # Replaying binlog...
--let $datadir= `select @@datadir`
--let $f= query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
--exec $MYSQL_BINLOG $datadir/$f| $MYSQL -S $SLAVE_MYSOCK test
select *, row_start, row_end from t1 for system_time all;

--exec grep -i timestamp $datadir/$f || true
--echo /tmp/$f

flush logs;
--connection master
update t1 set x= 2 where pk = 1;
update t1 set x= 3 where pk = 1;

--sync_slave_with_master
select *, row_start, row_end from t1 for system_time all;
--let $datadir= `select @@datadir`
--let $f2= query_get_value(SHOW SLAVE STATUS, Relay_Log_File, 1)
--sleep 2

--exec grep -i timestamp $datadir/$f
--echo /tmp/$f

--connection master
drop database test;
create database test;

--source include/rpl_end.inc
--exit

--echo # Replaying binlog...
--exec $MYSQL_BINLOG $datadir/$f2| $MYSQL -S $SLAVE_MYSOCK test
--exec $MYSQL_BINLOG $datadir/$f2| $MYSQL -S $SLAVE_MYSOCK test
select *, row_start, row_end from t1 for system_time all;
--connection master

--connection master
drop database test;
create database test;

--source include/rpl_end.inc
