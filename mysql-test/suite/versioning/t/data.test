--source include/have_innodb.inc
--source suite/versioning/engines.inc
--source suite/versioning/common.inc

create or replace table t1 (x int) with system versioning;
insert into t1 values (1), (2);
delete from t1 where x = 1;
select row_start, row_end into @s1, @e1 from t1 for system_time all where x = 1;
select row_start, row_end into @s2, @e2 from t1 for system_time all where x = 2;

create or replace table t2 (
  x int,
  row_start timestamp(6) as row start invisible,
  row_end timestamp(6)  as row end invisible,
  period for system_time (row_start, row_end))
with system versioning;

eval
create or replace function check_fields(x int, row_start timestamp(6), row_end timestamp(6))
    returns char(50) deterministic
    return if (x = 1,
              if (row_start = @s1 and row_end = @e1, '[CORRECT]', '[WRONG]'),
              if (x = 2 and row_start = @s2 and row_end = @e2, '[CORRECT]', '[WRONG]'));

set force_fields_visible= ON; flush tables;
insert into t2 (x, row_start, row_end) select x, row_start, row_end from t1 for system_time all;
set force_fields_visible= OFF; flush tables;
--echo # t2 has the same data as t1
select x, check_fields(x, row_start, row_end) from t2 for system_time all order by x;

--let TMP= $MYSQLTEST_VARDIR/tmp

--exec $MYSQL_DUMP --dump-history --databases test > $TMP/dump_history.sql
--exec $MYSQL_DUMP --databases test > $TMP/dump_no_history.sql
--exec $MYSQL_DUMP --dump-history --no-create-info --skip-comments --databases test > $TMP/dump_only_data.sql
--error 1
--exec $MYSQL_DUMP --dump-history --compact test 2>&1
--error 1
--exec $MYSQL_DUMP --tab=$TMP --xml test 2>&1

# TODO: MDEV-16766 mysqldump: dump history in XML
if (0)
{
--exec $MYSQL_DUMP --dump-history --xml --databases test > $TMP/dump_history.xml
}
--exec $MYSQL_DUMP --dump-history --tab=$TMP test

--echo # SQL dump with/without history
--echo ## With history
drop tables t1, t2;
--exec $MYSQL test < $TMP/dump_history.sql
select x, check_fields(x, row_start, row_end) from t1 for system_time all order by x;
select x, check_fields(x, row_start, row_end) from t2 for system_time all order by x;
--echo ## Without history
drop tables t1, t2;
--exec $MYSQL test < $TMP/dump_no_history.sql
select x, check_row_ts(row_start, row_end) from t1 for system_time all order by x;
select x, check_row_ts(row_start, row_end) from t2 for system_time all order by x;

--echo ## History and --no-create-info --skip-comments
create or replace table t1 (x int) with system versioning;
delete from t2; delete history from t2;
--exec $MYSQL test < $TMP/dump_only_data.sql
select x, check_fields(x, row_start, row_end) from t1 for system_time all order by x;
select x, check_fields(x, row_start, row_end) from t2 for system_time all order by x;
create or replace table t1 (x int) with system versioning;

# TODO: MDEV-16766 mysqldump: dump history in XML
if (0)
{
--echo # XML with history
drop table t1;
create or replace table t1 (x int) with system versioning;
delete from t2;
delete history from t2;
set force_fields_visible= ON; flush tables;
--replace_result $TMP TMP
eval load xml infile '$TMP/dump_history.xml' into table t1;
--exec cp $TMP/dump_history.xml /tmp
set force_fields_visible= OFF; flush tables;
--echo ## History is now loaded as current data (TODO)
select *, check_row_ts(row_start, row_end) from t1 for system_time all;
# TODO: check mysqlimport
# --exec $MYSQL_IMPORT test $TMP/dump_history.xml
}

--echo # --tab with history
drop tables t1, t2;
--exec $MYSQL test < $TMP/t1.sql
--exec $MYSQL test < $TMP/t2.sql
--replace_result $default_engine DEFAULT_ENGINE
show create table t1;
--replace_result $default_engine DEFAULT_ENGINE
show create table t2;
set force_fields_visible= ON; flush tables;
--replace_result $TMP tmp
eval load data infile '$TMP/t1.txt' into table t1 (x, row_start, row_end);
--replace_result $TMP tmp
eval load data infile '$TMP/t2.txt' into table t2 (x, row_start, row_end);
set force_fields_visible= OFF; flush tables;
select *, check_row_ts(row_start, row_end) from t1 for system_time all;
select *, check_row_ts(row_start, row_end) from t2 for system_time all;

# Cleanup
--remove_files_wildcard $TMP *.sql
--remove_files_wildcard $TMP *.txt
--remove_files_wildcard $TMP *.xml
drop tables t1, t2;
drop function check_fields;

--source suite/versioning/common_finish.inc
