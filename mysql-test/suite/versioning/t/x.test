--source include/have_partition.inc
--error ER_PART_WRONG_VALUE
create or replace table t1 (x int) with system versioning
partition by system_time limit 999 auto_increment;
--error ER_PART_WRONG_VALUE
create or replace table t1 (x int) with system versioning
partition by system_time interval 3599 second auto_increment;

create or replace table t1 (x int) with system versioning
partition by system_time limit 1000 auto_increment;
show create table t1;

insert into t1 values (1);
show create table t1;

--echo # AUTO_INCREMENT from 2 to 5
create or replace table t1 (x int) with system versioning
partition by system_time interval 3600 second
starts '2000-01-01 00:00:00' auto_increment;
show create table t1;

set timestamp= unix_timestamp('2000-01-01 00:00:00');
insert into t1 values (1);
show create table t1;

set timestamp= unix_timestamp('2000-01-01 01:00:00');
update t1 set x= x + 1;
show create table t1;

set timestamp= unix_timestamp('2000-01-01 02:00:00');
update t1 set x= x + 2;
show create table t1;

--echo # AUTO_INCREMENT from 3 to 6, manual names
set timestamp= unix_timestamp('2000-01-01 00:00:00');
create or replace table t1 (x int) with system versioning
partition by system_time interval 1 hour auto_increment (
    partition p1 history,
    partition p3 history,
    partition pn current);
show create table t1;

insert into t1 values (1);
show create table t1;

set timestamp= unix_timestamp('2000-01-01 01:00:00');
update t1 set x= x + 3;
show create table t1;

set timestamp= unix_timestamp('2000-01-01 02:00:00');
update t1 set x= x + 4;
show create table t1;

set timestamp= unix_timestamp('2000-01-01 03:00:00');
update t1 set x= x + 5;
show create table t1;

--echo # Test VIEW
create or replace table t1 (x int) with system versioning
partition by system_time limit 1000 auto_increment;
create or replace view v1 as select * from t1;

insert into v1 values (1);
show create table t1;

drop view v1;
drop tables t1;

--echo # Multiple increments in single command
set timestamp= unix_timestamp('2000-01-01 00:00:00');
create or replace table t1 (x int) with system versioning
partition by system_time interval 1 hour auto_increment partitions 3;

create or replace table t2 (y int) with system versioning
partition by system_time interval 1 hour auto_increment partitions 4;

insert into t1 values (1);
insert into t1 values (2);

set timestamp= unix_timestamp('2000-01-01 01:00:00');
update t1, t2 set x= x + 1, y= y + 1;
show create table t1;
show create table t2;

set timestamp= unix_timestamp('2000-01-01 02:00:00');
update t1, t2 set x= x + 1, y= y + 1;
show create table t1;
show create table t2;

--echo # Complex table
set timestamp= unix_timestamp('2000-01-01 00:00:00');
create or replace table t1 (
  x int primary key auto_increment,
  t timestamp(6) default '2001-11-11 11:11:11',
  b blob(4096) NULL,
  c varchar(1033) NOT NULL,
  u int unique,
  i1 tinyint, i2 smallint, i3 bigint,
  index three(i1, i2, i3),
  v1 timestamp(6) generated always as (t + interval 1 day),
  v2 timestamp(6) generated always as (t + interval 1 month) stored,
  s timestamp(6) as row start,
  e timestamp(6) as row end,
  period for system_time (s, e),
  ps date, pe date,
  period for app_time (ps, pe),
  constraint check_constr check (u > -1))
with system versioning default charset=ucs2
partition by system_time interval 1 hour auto_increment (
    partition p2 history,
    partition pn current);
show create table t1;

insert into t1 (x, c, u, i1, i2, i3, ps, pe)
values (1, 'cc', 0, 1, 2, 3, '1999-01-01', '2000-01-01');
show create table t1;

set timestamp= unix_timestamp('2000-01-01 01:00:00');
update t1 set x= x + 6;
show create table t1;

drop tables t1;
