--source include/have_innodb.inc
--source include/maybe_debug.inc

set default_storage_engine=innodb;
set @bigval= repeat('0123456789', 30);

delimiter ~~;
create or replace procedure check_table(table_name varchar(255))
begin
  select table_id into @table_id
  from information_schema.innodb_sys_tables
  where name = concat('test/', table_name);
  select name, mtype, hex(prtype) as prtype, len
  from information_schema.innodb_sys_columns
  where table_id = @table_id;
end~~
delimiter ;~~

--echo # Case 1: VARCHAR(<255) -> VARCHAR(>255) conversion
create or replace table t (a varchar(2)) row_format=redundant;
if ($have_debug) {
--disable_query_log
--disable_result_log
set debug_dbug= '+d,ib_resize_column_error';
--error ER_RECORD_FILE_FULL
alter table t modify a varchar(300);
set debug_dbug= default;
--enable_query_log
--enable_result_log
}
alter table t modify a varchar(300);
insert into t values (@bigval);
select count(a) from t where a = @bigval;
--error ER_DATA_TOO_LONG
insert into t values (repeat('X', 301));
alter table t modify a char(4096);
select count(a) from t where a = @bigval;

check table t extended;
call check_table('t');

--echo # Case 2: CHAR extension
--error ER_TOO_BIG_FIELDLENGTH
create or replace table t (a char(256)) engine=myisam;
--error ER_TOO_BIG_FIELDLENGTH
create or replace table t (a char(256)) engine=myisam row_format=redundant;
--error ER_TOO_BIG_FIELDLENGTH
create or replace table t (a char(256));
create or replace table t (a char(256)) row_format=redundant;

create or replace table t (a char(2)) row_format=redundant;
if ($have_debug) {
--disable_query_log
--disable_result_log
set debug_dbug= '+d,ib_resize_column_error';
--error ER_RECORD_FILE_FULL
alter table t modify a char(300);
set debug_dbug= default;
--enable_query_log
--enable_result_log
}
alter table t modify a char(300);
insert into t values (@bigval);
select count(a) from t where a = @bigval;
alter table t modify a char(4096);
select count(a) from t where a = @bigval;

check table t extended;
call check_table('t');

--echo # Case 3: VARCHAR -> CHAR conversion
create or replace table t (a varchar(300)) row_format=redundant;
if ($have_debug) {
--disable_query_log
--disable_result_log
set debug_dbug= '+d,ib_instant_error';
--error ER_RECORD_FILE_FULL
alter table t modify a char(300);
set debug_dbug= default;
--enable_query_log
--enable_result_log
}
insert into t values (@bigval);
alter table t modify a char(300);
select count(a) from t where a = @bigval;

check table t extended;
call check_table('t');

create or replace table t (a varchar(300)) row_format=redundant;
alter table t modify a char(259);

--echo # Case 4: integer conversions
create or replace table t (x tinyint) row_format=redundant;
if ($have_debug) {
--disable_query_log
--disable_result_log
set debug_dbug= '+d,ib_instant_error';
--error ER_RECORD_FILE_FULL
alter table t modify x smallint;
set debug_dbug= default;
--enable_query_log
--enable_result_log
}
insert into t values (127);
alter table t modify x smallint;
select * from t;
check table t extended;
call check_table('t');

update t set x= 32767;
alter table t modify x mediumint;
select * from t;
check table t extended;
call check_table('t');

update t set x= 8388607;
alter table t modify x int;
select * from t;
check table t extended;
call check_table('t');

update t set x= 2147483647;
alter table t modify x bigint;
select * from t;
check table t extended;
call check_table('t');


--echo # Case 5: instant conversion CHAR -> VARCHAR
create or replace table t(a char(2));
insert into t values('a ');
select hex(a) from t;
alter table t change a a varchar(2);
select hex(a) from t;
drop table t;

--echo # Check assertion in wrong instant operation
create or replace table t1 (a varchar(26) not null) default character set utf8mb4 row_format=redundant;
alter table t1 modify a varchar(25) not null;

drop database test;
create database test;
