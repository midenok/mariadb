create or replace table t (id int, s date, e date, period for apptime(s,e));
insert into t values(1, '1999-01-01', '2018-12-12');
insert into t values(1, '1999-01-01', '2017-01-01');
insert into t values(1, '2017-01-01', '2019-01-01');
insert into t values(2, '1998-01-01', '2018-12-12');
insert into t values(3, '1997-01-01', '2015-01-01');
insert into t values(4, '2016-01-01', '2020-01-01');
create or replace table t1 (id int, s date, e date, period for apptime(s,e));
insert t1 select * from t;
create or replace table t2 (id int, s date, e date, period for apptime(s,e));
insert t2 select * from t;
update t for portion of apptime from '2000-01-01' to '2018-01-01'
       set id=id + 5;
select * from t;
id	s	e
6	2000-01-01	2018-01-01
6	2000-01-01	2017-01-01
6	2017-01-01	2018-01-01
7	2000-01-01	2018-01-01
8	2000-01-01	2015-01-01
9	2016-01-01	2018-01-01
1	1999-01-01	2000-01-01
1	2018-01-01	2018-12-12
1	1999-01-01	2000-01-01
1	2018-01-01	2019-01-01
2	1998-01-01	2000-01-01
2	2018-01-01	2018-12-12
3	1997-01-01	2000-01-01
4	2018-01-01	2020-01-01
# Check triggers
update t1 for portion of apptime from '2000-01-01' to '2018-01-01'
       set id=id + 5;
select * from t1 order by id, s, e;
id	s	e
1	1999-01-01	2000-01-01
1	1999-01-01	2000-01-01
1	2018-01-01	2018-12-12
1	2018-01-01	2019-01-01
2	1998-01-01	2000-01-01
2	2018-01-01	2018-12-12
3	1997-01-01	2000-01-01
4	2018-01-01	2020-01-01
6	2000-01-01	2017-01-01
6	2000-01-01	2018-01-01
6	2017-01-01	2018-01-01
7	2000-01-01	2018-01-01
8	2000-01-01	2015-01-01
9	2016-01-01	2018-01-01
select * from log_tbl;
log
>UPD: 1, 1999-01-01, 2018-12-12 -> 6, 2000-01-01, 2018-01-01
<UPD: 1, 1999-01-01, 2018-12-12 -> 6, 2000-01-01, 2018-01-01
>INS: 1, 1999-01-01, 2000-01-01
<INS: 1, 1999-01-01, 2000-01-01
>INS: 1, 2018-01-01, 2018-12-12
<INS: 1, 2018-01-01, 2018-12-12
>UPD: 1, 1999-01-01, 2017-01-01 -> 6, 2000-01-01, 2017-01-01
<UPD: 1, 1999-01-01, 2017-01-01 -> 6, 2000-01-01, 2017-01-01
>INS: 1, 1999-01-01, 2000-01-01
<INS: 1, 1999-01-01, 2000-01-01
>UPD: 1, 2017-01-01, 2019-01-01 -> 6, 2017-01-01, 2018-01-01
<UPD: 1, 2017-01-01, 2019-01-01 -> 6, 2017-01-01, 2018-01-01
>INS: 1, 2018-01-01, 2019-01-01
<INS: 1, 2018-01-01, 2019-01-01
>UPD: 2, 1998-01-01, 2018-12-12 -> 7, 2000-01-01, 2018-01-01
<UPD: 2, 1998-01-01, 2018-12-12 -> 7, 2000-01-01, 2018-01-01
>INS: 2, 1998-01-01, 2000-01-01
<INS: 2, 1998-01-01, 2000-01-01
>INS: 2, 2018-01-01, 2018-12-12
<INS: 2, 2018-01-01, 2018-12-12
>UPD: 3, 1997-01-01, 2015-01-01 -> 8, 2000-01-01, 2015-01-01
<UPD: 3, 1997-01-01, 2015-01-01 -> 8, 2000-01-01, 2015-01-01
>INS: 3, 1997-01-01, 2000-01-01
<INS: 3, 1997-01-01, 2000-01-01
>UPD: 4, 2016-01-01, 2020-01-01 -> 9, 2016-01-01, 2018-01-01
<UPD: 4, 2016-01-01, 2020-01-01 -> 9, 2016-01-01, 2018-01-01
>INS: 4, 2018-01-01, 2020-01-01
<INS: 4, 2018-01-01, 2020-01-01
# INSERT trigger only also works
drop trigger tr1upd_t2;
drop trigger tr2upd_t2;
update t2 for portion of apptime from '2000-01-01' to '2018-01-01'
       set id=id + 5;
select * from t2 order by id, s, e;
id	s	e
1	1999-01-01	2000-01-01
1	1999-01-01	2000-01-01
1	2018-01-01	2018-12-12
1	2018-01-01	2019-01-01
2	1998-01-01	2000-01-01
2	2018-01-01	2018-12-12
3	1997-01-01	2000-01-01
4	2018-01-01	2020-01-01
6	2000-01-01	2017-01-01
6	2000-01-01	2018-01-01
6	2017-01-01	2018-01-01
7	2000-01-01	2018-01-01
8	2000-01-01	2015-01-01
9	2016-01-01	2018-01-01
select * from log_tbl;
log
>INS: 1, 1999-01-01, 2000-01-01
<INS: 1, 1999-01-01, 2000-01-01
>INS: 1, 2018-01-01, 2018-12-12
<INS: 1, 2018-01-01, 2018-12-12
>INS: 1, 1999-01-01, 2000-01-01
<INS: 1, 1999-01-01, 2000-01-01
>INS: 1, 2018-01-01, 2019-01-01
<INS: 1, 2018-01-01, 2019-01-01
>INS: 2, 1998-01-01, 2000-01-01
<INS: 2, 1998-01-01, 2000-01-01
>INS: 2, 2018-01-01, 2018-12-12
<INS: 2, 2018-01-01, 2018-12-12
>INS: 3, 1997-01-01, 2000-01-01
<INS: 3, 1997-01-01, 2000-01-01
>INS: 4, 2018-01-01, 2020-01-01
<INS: 4, 2018-01-01, 2020-01-01
# Modify period start/end fields
truncate t;
insert into t values(1, '1999-01-01', '2018-12-12');
insert into t values(1, '1999-01-01', '2017-01-01');
update t for portion of apptime from '2000-01-01' to '2018-01-01'
       set id= id + 5, s=subdate(s, 5), e=adddate(e, 5);
select * from t;
id	s	e
6	1998-12-27	2018-12-17
6	1998-12-27	2017-01-06
1	1999-01-01	2000-01-01
1	2018-01-01	2018-12-12
1	1999-01-01	2000-01-01
# Precision timestamps
create or replace table t (id int, s timestamp(5), e timestamp(5),
period for apptime(s,e));
insert into t values(1, '1999-01-01', '2018-12-12');
insert into t values(1, '1999-01-01', '2017-01-01');
update t for portion of apptime from '2000-01-01 00:00:00.00015'
                                to '2018-01-01 12:34:56.31415'
         set s='1999-09-09 3:14:15.926535', id= id + 5;
select * from t;
id	s	e
6	1999-09-09 03:14:15.92653	2018-01-01 12:34:56.31415
6	1999-09-09 03:14:15.92653	2017-01-01 00:00:00.00000
1	1999-01-01 00:00:00.00000	2000-01-01 00:00:00.00015
1	2018-01-01 12:34:56.31415	2018-12-12 00:00:00.00000
1	1999-01-01 00:00:00.00000	2000-01-01 00:00:00.00015
# Strings
create or replace table t (id int, str text, s date, e date,
period for apptime(s,e));
insert into t values(1, 'data', '1999-01-01', '2018-12-12');
insert into t values(1, 'other data', '1999-01-01', '2018-12-12');
update t for portion of apptime from '2000-01-01' to '2018-01-01'
       set id= id + 5;
select * from t;
id	str	s	e
6	data	2000-01-01	2018-01-01
6	other data	2000-01-01	2018-01-01
1	data	1999-01-01	2000-01-01
1	data	2018-01-01	2018-12-12
1	other data	1999-01-01	2000-01-01
1	other data	2018-01-01	2018-12-12
# multi-table UPDATE is prohibited
create or replace table t1(x int);
update t for portion of apptime from '2000-01-01' to '2018-01-01', t1
set t.id= t.id + 5;
ERROR HY000: PORTION OF TIME is not allowed here
update t1 set x= (select id from t for portion of apptime from '2000-01-01' to '2018-01-01');
ERROR HY000: PORTION OF TIME is not allowed here
# auto_inrement field is updated
create or replace table t (id int primary key auto_increment, x int,
s date, e date, period for apptime(s, e));
insert into t values (default, 1, '1999-01-01', '2018-12-12');
update t for portion of apptime from '2000-01-01' to '2018-01-01' set x= x + 5;
select * from t;
id	x	s	e
1	6	2000-01-01	2018-01-01
2	1	1999-01-01	2000-01-01
3	1	2018-01-01	2018-12-12
# generated columns are updated
create or replace table t (x int, s date, e date,
xs date as (s) stored, xe date as (e) stored,
period for apptime(s, e));
insert into t values(1, '1999-01-01', '2018-12-12', default, default);
select * from t;
x	s	e	xs	xe
1	1999-01-01	2018-12-12	1999-01-01	2018-12-12
update t for portion of apptime from '2000-01-01' to '2018-01-01' set x= x + 5;
select *, xs=s and xe=e from t;
x	s	e	xs	xe	xs=s and xe=e
6	2000-01-01	2018-01-01	2000-01-01	2018-01-01	1
1	1999-01-01	2000-01-01	1999-01-01	2000-01-01	1
1	2018-01-01	2018-12-12	2018-01-01	2018-12-12	1
# system-time columns are updated
create or replace table t (x int, s date, e date,
period for apptime(s, e)) with system versioning;
set @@timestamp=3141592;
insert into t values(1, '1999-01-01', '2018-12-12');
insert into t values(2, '1999-01-01', '1999-12-12');
select *, unix_timestamp(row_start), unix_timestamp(row_end) from t;
x	s	e	unix_timestamp(row_start)	unix_timestamp(row_end)
1	1999-01-01	2018-12-12	3141592.000000	2147483647.999999
2	1999-01-01	1999-12-12	3141592.000000	2147483647.999999
set @@timestamp=314159265.358979;
update t for portion of apptime from '2000-01-01' to '2018-01-01' set x= x + 5;
select *, unix_timestamp(row_start),
unix_timestamp(row_end) from t for system_time all;
x	s	e	unix_timestamp(row_start)	unix_timestamp(row_end)
6	2000-01-01	2018-01-01	314159265.358979	2147483647.999999
2	1999-01-01	1999-12-12	3141592.000000	2147483647.999999
1	1999-01-01	2018-12-12	3141592.000000	314159265.358979
1	1999-01-01	2000-01-01	314159265.358979	2147483647.999999
1	2018-01-01	2018-12-12	314159265.358979	2147483647.999999
# system versioning with transactions
create or replace table t (x int, s date, e date,
rs bigint(20) unsigned as row start invisible,
re bigint(20) unsigned as row end invisible,
period for apptime(s, e),
period for system_time(rs, re)) with system versioning engine=InnoDB;
insert into t values(1, '1999-01-01', '2018-12-12'),
(2, '1999-01-01', '1999-12-12');
select rs into @ins_trx from t limit 1;
select re into @trx_max from t limit 1;
select * from t;
x	s	e
1	1999-01-01	2018-12-12
2	1999-01-01	1999-12-12
update t for portion of apptime from '2000-01-01' to '2018-01-01' set x= x + 5;
select *, if(rs = @ins_trx, "OLD", "NEW"),
if(re = @trx_max, "CURRENT", "HISTORY") from t for system_time all;
x	s	e	if(rs = @ins_trx, "OLD", "NEW")	if(re = @trx_max, "CURRENT", "HISTORY")
6	2000-01-01	2018-01-01	NEW	CURRENT
2	1999-01-01	1999-12-12	OLD	CURRENT
1	1999-01-01	2018-12-12	OLD	HISTORY
1	1999-01-01	2000-01-01	NEW	CURRENT
1	2018-01-01	2018-12-12	NEW	CURRENT
create or replace database test;
