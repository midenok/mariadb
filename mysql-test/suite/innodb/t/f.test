--source include/have_innodb.inc

# In fail_fk_backup_frm the log is already written but rename is not done
call mtr.add_suppression("Failed to execute action for entry");

--let $DATADIR= `SELECT @@datadir;`

--let $create_statement2=
--let $insert_statement=
--let $insert_statement2=

--delimiter $
create or replace procedure make_tables()
begin
  create table t1 (x int primary key, a int references t1(x));
  create table t2 (x int references t1(x), y int primary key, b int references t2(x));
  create table t3 (x int references t2(x), y int references t2(y), z int primary key, c int references t3(z));
  create table t4 (
    a int primary key,
    x int references t1(x),
    y int references t2(y),
    z int references t3(z));
  insert t1 values (1, 1);
  insert t2 values (1, 2, 1);
  insert t3 values (1, 2, 3, 3);
  insert t4 values (0, 1, 2, 3);
end $

create or replace procedure drop_tables()
begin
  drop table if exists t4;
  drop table if exists t3;
  drop table if exists t2;
  drop table if exists t1;
end $
--delimiter ;

let $show_statement0= check tables t1, t2, t3, t4;
let $show_statement1= check tables t1, t2, t3, t4;
let $show_statement2= check tables t1, t2, t3, t4;

--echo # DROP TABLE
let $create_statement= call make_tables;
let $debug_dbug="+d,fail_fk_backup_frm";
let $fail_statement= drop tables t4, t1, t3, t2;
--source include/foreign_fail.inc
call drop_tables;
let $debug_dbug="+d,fail_fk_install_shadow_frm";
--source include/foreign_fail.inc
call drop_tables;

# FIXME: crash statements

--echo # CREATE TABLE
create table t1 (x int primary key);
create table t2 (y int primary key);
create table t3 (z int primary key);
--let $create_statement=
let $fail_statement= create table t4 (a int primary key, x int references t1(x), y int references t2(y), z int references t3(z));
let $debug_dbug="+d,fail_fk_backup_frm";
--source include/foreign_fail.inc
let $debug_dbug="+d,fail_fk_install_shadow_frm";
--source include/foreign_fail.inc
call drop_tables;

--echo # RENAME TABLE
call make_tables;
--let $create_statement=
let $fail_statement= rename table t4 to xt4, t1 to xt1, t3 to xt3, t2 to xt2;
let $debug_dbug="+d,fail_fk_backup_frm";
--source include/foreign_fail.inc
let $debug_dbug="+d,fail_fk_install_shadow_frm";
--source include/foreign_fail.inc
let $fail_statement= alter table t3 rename xt3;
let $debug_dbug="+d,fail_fk_backup_frm";
--source include/foreign_fail.inc
let $debug_dbug="+d,fail_fk_install_shadow_frm";
--source include/foreign_fail.inc
call drop_tables;

--echo # RENAME COLUMN
call make_tables;
--let $create_statement=
let $fail_statement= alter table t2 change y z int, change x y int, change b c int;
let $debug_dbug="+d,fail_fk_backup_frm";
--source include/foreign_fail.inc
let $debug_dbug="+d,fail_fk_install_shadow_frm";
--source include/foreign_fail.inc
let $fail_statement= alter table t3 rename column z to z2, rename column y to y2, rename column x to x2, rename column c to c2;
let $debug_dbug="+d,fail_fk_backup_frm";
--source include/foreign_fail.inc
let $debug_dbug="+d,fail_fk_install_shadow_frm";
--source include/foreign_fail.inc
call drop_tables;

--echo # ADD/DROP FOREIGN KEY, DROP COLUMN
call make_tables;
--let $create_statement=
show create table t3;
let $fail_statement= alter table t3
  drop foreign key fk_t3,
  drop foreign key fk_t3_2,
  drop foreign key fk_t3_3,
  drop c,
  add foreign key (x) references t1(x),
  add foreign key (y) references t2(x);
let $debug_dbug="+d,fail_fk_backup_frm";
--source include/foreign_fail.inc
let $debug_dbug="+d,fail_fk_install_shadow_frm";
--source include/foreign_fail.inc
call drop_tables;


#set @save_dbug=@@debug_dbug;
#let $create_statement= create or replace table t1 (id int primary key);
#let $create_statement2= create or replace table t2 (id int);
#let $insert_statement= insert into t1 values(1);
#let $insert_statement2= insert into t2 values(1);
#set session debug_dbug="+d,crash_fk_alter_1";
#let $crash_statement= alter table t2 add foreign key (id) references t1(id), algorithm=copy;
#--source suite/parts/inc/partition_crash_t2.inc

drop procedure make_tables;
drop procedure drop_tables;
set session debug_dbug=@save_dbug;
